services:
  web-app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/KamranProject
    environment:
      - DB_HOST=postgres
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
#      - postgres
      - rabbitmq
      - redis

#  postgres:
#    image: postgres:14.6-alpine
#    environment:
#      - POSTGRES_DB=dbname
#      - POSTGRES_USER=dbuser
#      - POSTGRES_PASSWORD=pass
#      - POSTGRES_HOST_AUTH_METHOD=trust

  rabbitmq:
    image: rabbitmq:management
    restart: always
    ports:
      - '5672:5672'
      - '15672:15672'

  redis:
    image: redis:7.0.11-alpine
    hostname: redis
    ports:
      - '6379:6379'

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    volumes:
      - ./:/KamranProject

    environment:
      - DB_HOST=postgres
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass

    command: >
       -A kamranproject worker -l info -P gevent
    links:
      - rabbitmq
      - redis
    depends_on:
#      - postgres
      - rabbitmq
      - redis


  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A kamranproject flower -P gevent
    volumes:
      - ./:/KamranProject
    links:
      - rabbitmq
      - redis
    depends_on:
#      - postgres
      - worker
      - rabbitmq
      - redis
    ports:
      - '5555:5555'




